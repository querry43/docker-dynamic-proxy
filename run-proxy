#!/bin/bash

sock=/var/run/docker.sock

function update_config {
    rm -f /etc/nginx/conf.d/vhost_*

    containers=$(echo -e "GET /containers/json HTTP/1.0\r\n" | nc -U $sock | grep '\[' | jq '.[] | .Id' | tr -d \")
   
    for container in $containers; do
        json=$(echo -e "GET /containers/$container/json HTTP/1.0\r\n" | nc -U $sock | grep '\[')
        container_name=$(echo "$json" | jq  '. | .Name' | tr -d \"/)
        ip=$(echo "$json" | jq  '. | .NetworkSettings.Networks.bridge.IPAddress' | sed 's/"//g')
        vhost_name=$(echo "$json" | jq  '. | .Config.Env' | grep VIRTUAL_HOST | sed 's/.*=\(.*\)".*/\1/')
        proxy_port=$(echo "$json" | jq  '. | .Config.Env' | grep PROXY_PORT | sed 's/.*=\(.*\)".*/\1/')
        proxy_port=${proxy_port:-80}
   
        if [ ! -z "$vhost_name" ]; then
            echo "adding redirect for $vhost_name ($container_name) to $ip:${proxy_port}"
            cat > /etc/nginx/conf.d/vhost_$vhost_name.conf <<EOF

server {
   listen       80;
   server_name  $vhost_name;

   client_max_body_size 20M;

   location ~ .well-known {
       root   /usr/share/nginx/html;
   }

   location / {
       proxy_pass   http://$ip:${proxy_port:-80};
   }
}

server {
   listen       443 ssl;
   server_name  $vhost_name;

   client_max_body_size 20M;

   ssl_certificate /etc/ssl/private/fullchain.pem;
   ssl_certificate_key /etc/ssl/private/privkey.pem;

   location / {
       proxy_pass   http://$ip:${proxy_port};
   }
}

EOF

        fi
    done
}

update_config
( while $(true); do sleep 1m; update_config; nginx -s reload; done ) &
nginx -g 'daemon off;'
